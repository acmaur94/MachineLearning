# üöÄ Projeto de Machine Learning: Previs√£o de Custos de Seguro de Sa√∫de

## üìã Sobre o Projeto

Este projeto teve como objetivo construir e avaliar modelos de machine learning para prever os custos individuais de seguro sa√∫de. O fluxo de trabalho abrange desde a an√°lise e tratamento dos dados at√© o treinamento, avalia√ß√£o e simula√ß√£o da implanta√ß√£o de um modelo preditivo, utilizando um dataset p√∫blico sobre segurados.

---

## üìä Dataset

O dataset utilizado cont√©m informa√ß√µes demogr√°ficas e de sa√∫de de segurados. O objetivo √© prever a coluna `charges` (custos) com base nas seguintes caracter√≠sticas:

* **`age`**: Idade do benefici√°rio.
* **`sex`**: G√™nero do contratante (`male`, `female`).
* **`bmi`**: √çndice de Massa Corporal (IMC).
* **`children`**: N√∫mero de dependentes cobertos pelo plano.
* **`smoker`**: Se a pessoa √© fumante (`yes`, `no`).
* **`region`**: √Årea residencial do benefici√°rio nos EUA.
* **`charges`**: Custos m√©dicos individuais faturados pelo seguro (vari√°vel alvo).

---

## üõ†Ô∏è Metodologia e Passos Realizados

O projeto seguiu um pipeline cl√°ssico de Ci√™ncia de Dados, executando as seguintes etapas:

1.  **Importa√ß√£o de Bibliotecas e Carga dos Dados**: O dataset foi carregado a partir de uma URL p√∫blica utilizando a biblioteca `pandas`.

2.  **Tratamento e Prepara√ß√£o dos Dados**:
    * Verifica√ß√£o da integridade do DataFrame, confirmando a aus√™ncia de valores nulos.
    * Transforma√ß√£o de colunas categ√≥ricas (`sex`, `smoker`, `region`) em formato num√©rico, utilizando t√©cnicas de Mapeamento e *One-Hot Encoding* para torn√°-las compat√≠veis com os algoritmos de machine learning.

3.  **An√°lise Explorat√≥ria dos Dados (EDA)**:
    * Foram gerados gr√°ficos para explorar a distribui√ß√£o dos custos, a rela√ß√£o entre o h√°bito de fumar e os custos, e uma matriz de correla√ß√£o entre as vari√°veis.
    * **Insights principais**: A an√°lise gr√°fica destacou a forte influ√™ncia do h√°bito de fumar (`smoker`) como principal fator no aumento dos custos do seguro.

4.  **Divis√£o dos Dados**: O dataset foi dividido em tr√™s conjuntos para garantir uma avalia√ß√£o robusta e imparcial dos modelos:
    * **Treino (70%)**: Usado para treinar os algoritmos.
    * **Valida√ß√£o (15%)**: Usado para comparar e selecionar o melhor modelo.
    * **Teste (15%)**: Usado para a avalia√ß√£o final do modelo escolhido, com dados nunca antes vistos por ele.

5.  **Treinamento dos Modelos**: Tr√™s algoritmos de regress√£o foram treinados com o conjunto de treino:
    * Regress√£o Linear
    * Random Forest Regressor
    * Gradient Boosting Regressor

6.  **Sele√ß√£o e Avalia√ß√£o de Modelos**: Os modelos foram avaliados no conjunto de valida√ß√£o utilizando as m√©tricas **RMSE** (Erro Quadr√°tico M√©dio) e **R¬≤** (Coeficiente de Determina√ß√£o). O modelo `Gradient Boosting` obteve o melhor desempenho e foi selecionado.

7.  **Implanta√ß√£o (Simula√ß√£o)**:
    * O melhor modelo (`Gradient Boosting`) foi salvo em um arquivo (`.pkl`) usando a biblioteca `joblib`.
    * O modelo foi carregado e uma fun√ß√£o foi criada para simular seu uso em um ambiente de produ√ß√£o, permitindo prever custos com base em novos dados de entrada.

---

## üèÜ Resultados e An√°lise de M√©tricas

O modelo **Gradient Boosting** foi o campe√£o e, ap√≥s a sele√ß√£o, foi avaliado no conjunto de teste para verificar sua performance final.

### M√©tricas de Avalia√ß√£o no Conjunto de Teste:

* **RMSE (Root Mean Squared Error): $4,579.74**
    * **O que significa?** Este valor indica que, em m√©dia, a previs√£o do modelo difere em aproximadamente **$4,579.74** do custo real do seguro. Considerando a faixa de valores dos custos, este √© um erro razo√°vel.

* **R¬≤ (Coeficiente de Determina√ß√£o): 0.8617**
    * **O que significa?** O nosso modelo consegue explicar aproximadamente **86.17%** da vari√¢ncia nos custos do seguro no conjunto de teste. Este √© um resultado excelente e demonstra um alto poder preditivo.

---

## üèÅ Conclus√£o

O projeto demonstrou com sucesso um fluxo completo de desenvolvimento de um modelo de machine learning, desde a an√°lise inicial at√© a simula√ß√£o de implanta√ß√£o. O modelo **Gradient Boosting** provou ser altamente eficaz para esta tarefa, apresentando m√©tricas de desempenho s√≥lidas no conjunto de teste e confirmando sua capacidade de gerar previs√µes de custo de seguro com boa precis√£o.

---

## üíª Como Executar o Projeto

1.  Clone este reposit√≥rio para a sua m√°quina local.
2.  Abra o arquivo `.ipynb` no **Google Colab** ou em um ambiente Jupyter.
3.  Execute as c√©lulas do notebook em ordem sequencial para reproduzir todas as etapas, desde a carga dos dados at√© a simula√ß√£o de previs√£o.